R.version
install.packages("tidyverse")
install.packages("jsonlite")
setwd("C:/Users/chira/Desktop/Rutgers/Repos/R_Analysis")
ls
setwd("C:/Users/chira/Desktop/Rutgers/Repos/R_Analysis")
setwd("C:/Users/chira/Desktop/Rutgers/Repos/R_Analysis/01_Demo")
x <- 3
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
?<name of function>
?<name of function>
?<c>
?<hello world>
?<hello_world>
> ?read.csv()
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
View(demo_table)
library(package)
library(jsonlite)
library(jsonlite)
install.packages()
?fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
View(demo_table)
View(demo_table2)
x[3]
numlist[3]
demo_table[3,"Year"]
View(demo_table)
demo_table[3,3]
demo_table$"Year"
demo_table$"Year"[2]
demo_table$"Year"[3]
filter_table <- demo_table2[demo_table2$price>10000,]
View(demo_table2)
view(filter_table)
filter_table <- demo_table2[demo_table2$price > 10000,]
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
View(filter_table)
filter_table <- subset(demo_table2, price > 10000,)
filter_table <- subset(demo_table2, price > 10000 and city == 'suracuse, NY',)
filter_table <- subset(demo_table2, price > 10000 and city == "suracuse, NY",)
filter_table <- subset(demo_table2, price > 10000 & city == "suracuse, NY",)
filter_table <- subset(demo_table2, price > 10000 & city == "syracuse, NY",)
filter_table <- subset(demo_table2, price > 10000 & "clean" %in% title_status,)
view(filter_table)
filter_table <- subset(demo_table2,  "clean" %in% title_status,)
filter_table <- subset(demo_table2,  "clean" %in% title_status,)
filter_table <- subset(demo_table2,  "clean" %in% title_status,)
> filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
> filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
View(filter_table2)
View(filter_table2)
View(filter_table)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample[1]
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,3]
num_rows <- 1:nrow(demo_table)
demo_table[sample_rows,]
demo_table[sample(1:nrow(demo_table), 3),]
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
demo_table[sample(1:nrow(demo_table), 3),]
library(tidyverse)
?mutate()
library(tidyverse)
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
View(demo_table)
View(demo_table2)
summarize_data <-demo_table2 %>% group_by(condition) %>% summarize (mean_mileage = mean(odometer)), .groups = 'keep')
summarize_data <-demo_table2 %>% group_by(condition) %>% summarize (mean_mileage = mean(odometer), .groups = 'keep')
View(summarize_data)
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
vehicle_data <- read.csv('Vehicle_Data.xlsx', check.names =F, stringsAsFactors = F)
vehicle_data <- read.csv('Vehicle_Data.xlsx', check.names =T, stringsAsFactors = T)
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
long_table <- demo_table3 %>% gather(key="Metric",value="Score",buying_price:popularity)
View(long_table)
wide_table <- long_table %>% spread(key="Metric",value="Score")
View(wide_table)
head(mpg)
View(wide_table)
View(vehicle_data)
View(summarize_data)
View(long_table)
View(filter_table2)
View(demo_table3)
View(demo_table2)
View(demo_table)
head(mpg)
view(mpg)
ggplot(mtcars,aes(x=wt)) + geom_density()
view(mtcars)
shapiro.test(mtcars$wt)
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven)))
plt + geom_density() #visualize distribution using density plot
plt <- ggplot(population_table,aes(x=log10(Miles_Driven)))
plt <- ggplot(population_table,aes(x=log10(Miles_Driven)))
plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
sample_table <- population_table %>% sample_n(50) #generate 50 randomly sampled data points
sample_table2 <- population_table %>% sample_n(50)
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven)) #compare means of two samples
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mpg_data <- read.csv('mpg_modified.csv')
#4. Import and read in the MechaCar_mpg.csv file as a dataframe.
setwd("C:/Users/chira/Desktop/Rutgers/Repos/MechaCar_Statistical_Analysis")
library(dplyr)
#4. Import and read in the MechaCar_mpg.csv file as a dataframe.
library(tidyverse)
mecha_mpg <- read.csv(file='./Resources/MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
#5. Perform linear regression using the lm() function
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_mpg)
#6. Using the summary() function, determine the p-value and the r-squared value for the linear regression model.
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_mpg))
#Additional Step: eliminate the independent variables that have little impact on predicting mpg to see impact:
lm(mpg ~ vehicle_length + ground_clearance, data=mecha_mpg)
summary(lm(mpg ~ vehicle_length + ground_clearance, data=mecha_mpg))
#2. Import and read in the Suspension_Coil.csv file as a table
mecha_coil <- read.csv(file='./Resources/Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
#3. Create a total_summary dataframe using the summarize() function to get the mean, median, variance, and standard deviation of the suspension coilâ€™s PSI column.
total_summary <- mecha_coil %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Var_PSI=var(PSI),
Std_Dev_PSI=sd(PSI),
Num_Coil=n(), .groups = 'keep')
#4. Create a lot_summary dataframe using the group_by() and the summarize() functions to group each manufacturing lot.
lot_summary <- mecha_coil  %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Var_PSI=var(PSI),
Std_Dev_PSI=sd(PSI),
Num_Coil=n(), .groups = 'keep')
#box plot: PSI Whole lot
plt1 <- ggplot(mecha_coil,aes(y=PSI)) #import dataset into ggplot2
plt1 + geom_boxplot() #add boxplot
#box plot: PSI each indicdiual Lot
plt2 <- ggplot(mecha_coil,aes(x=Manufacturing_Lot,y=PSI)) #import dataset into ggplot2
plt2 + geom_boxplot()
#1. use t.test() to determine if the PSI across ALL lots is statistically different from the pop. mean of 1,500 PSI.
t.test(mecha_coil$PSI,mu=1500)
#2. Use t.test() function 3 more times with subset() to determine if PSI for each manufacturing lot is statistically different from the pop. mean of 1,500 PSI
lot1 <- subset(mecha_coil, Manufacturing_Lot=="Lot1")
lot2 <- subset(mecha_coil, Manufacturing_Lot=="Lot2")
lot3 <- subset(mecha_coil, Manufacturing_Lot=="Lot3")
t.test(lot1$PSI,mu=1500)
t.test(lot2$PSI,mu=1500)
t.test(lot3$PSI,mu=1500)
# log10 was not used as the data was not skewed and did not need any smoothing
# log10 was not used as the data was not skewed and did not need any smoothing
# log10 was not used as the data was not skewed and did not need any smoothing
# log10 was not used as the data was not skewed and did not need any smoothing
# log10 was not used as the data was not skewed and did not need any smoothing
# Linear Regression to Predict MPG
library(dplyr)
library(tidyverse)
mecha_mpg <- read.csv(file='./Resources/MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_mpg)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_mpg))
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_mpg))
#Additional Step: eliminate the independent variables that have little impact on predicting mpg to see impact:
lm(mpg ~ vehicle_length + ground_clearance, data=mecha_mpg)
summary(lm(mpg ~ vehicle_length + ground_clearance, data=mecha_mpg))
mecha_coil <- read.csv(file='./Resources/Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
total_summary <- mecha_coil %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Var_PSI=var(PSI),
Std_Dev_PSI=sd(PSI),
Num_Coil=n(), .groups = 'keep')
lot_summary <- mecha_coil  %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Var_PSI=var(PSI),
Std_Dev_PSI=sd(PSI),
Num_Coil=n(), .groups = 'keep')
#PSI Whole lot
plt1 <- ggplot(mecha_coil,aes(y=PSI)) #import dataset into ggplot2
plt1 + geom_boxplot() #add boxplot
view
view(total_summary)
#PSI each indicdiual Lot
plt2 <- ggplot(mecha_coil,aes(x=Manufacturing_Lot,y=PSI)) #import dataset into ggplot2
plt2 + geom_boxplot()
view(total_summary)
View(lot_summary)
t.test(mecha_coil$PSI,mu=1500)
lot1 <- subset(mecha_coil, Manufacturing_Lot=="Lot1")
lot2 <- subset(mecha_coil, Manufacturing_Lot=="Lot2")
lot3 <- subset(mecha_coil, Manufacturing_Lot=="Lot3")
t.test(lot1$PSI,mu=1500)
t.test(lot2$PSI,mu=1500)
t.test(lot3$PSI,mu=1500)
# Linear Regression to Predict MPG
library(dplyr)
library(tidyverse)
mecha_mpg <- read.csv(file='./Resources/MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_mpg)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_mpg))
#Additional Step: eliminate the independent variables that have little impact on predicting mpg to see impact:
lm(mpg ~ vehicle_length + ground_clearance, data=mecha_mpg)
summary(lm(mpg ~ vehicle_length + ground_clearance, data=mecha_mpg))
mecha_coil <- read.csv(file='./Resources/Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
total_summary <- mecha_coil %>% summarize(Mean=mean(PSI),
Median=median(PSI),
Var=var(PSI),
Std_Dev=sd(PSI),
Num_Coil=n(), .groups = 'keep')
lot_summary <- mecha_coil  %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),
Median=median(PSI),
Var=var(PSI),
Std_Dev=sd(PSI),
Num_Coil=n(), .groups = 'keep')
View(total_summary)
